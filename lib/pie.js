// Generated by CoffeeScript 1.8.0
var PieChart, React, d3;

React = require('react');

d3 = require('d3');

module.exports = PieChart = React.createClass({
  getDefaultProps: function() {
    return {
      color: '#000'
    };
  },
  render: function() {
    var arc, arcs, color, data, height, hover, onClick, onHover, pie, radius, selected, width, _ref;
    _ref = this.props, width = _ref.width, height = _ref.height, data = _ref.data, onClick = _ref.onClick, onHover = _ref.onHover, selected = _ref.selected, hover = _ref.hover;
    radius = Math.min(width, height) / 2;
    color = d3.scaleOrdinal(d3.schemeCategory20);
    pie = d3.pie().value(function(d) {
      return d.count;
    });
    if (this.props.start_angle) {
      pie = pie.startAngle(this.props.start_angle);
    }
    if (this.props.end_angle) {
      pie = pie.endAngle(this.props.end_angle);
    }
    arc = d3.arc().innerRadius(0).outerRadius(radius).padRadius(2);
    if (this.props.inner_radius) {
      arc = arc.innerRadius(this.props.inner_radius).cornerRadius(this.props.corner_radius || 2);
    }
    arcs = pie(data).map(function(d) {
      return arc(d);
    });
    return React.createElement("svg", {
      "className": 'pie-chart',
      "style": {
        position: 'relative',
        width: width,
        height: height
      }
    }, React.createElement("g", {
      "transform": "translate(" + radius + ", " + radius + ")"
    }, arcs.map((function(_this) {
      return function(arc, di) {
        var className, d;
        d = data[di];
        className = '';
        if (selected === d.label) {
          className += ' selected';
        } else if (hover === d.label) {
          className += ' hover';
        }
        return React.createElement("path", {
          "className": className,
          "onClick": onClick != null ? onClick.bind(null, d) : void 0,
          "onMouseOver": onHover != null ? onHover.bind(null, d) : void 0,
          "onMouseOut": onHover,
          "key": di,
          "x": radius,
          "y": radius,
          "d": arc,
          "fill": d.color || color(di)
        });
      };
    })(this))));
  }
});
