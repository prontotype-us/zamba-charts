// Generated by CoffeeScript 1.10.0
var React;

React = require('react');

exports.XAxis = React.createClass({displayName: "XAxis",
  render: function() {
    var height, options, padding, position, ref, style, width, x;
    ref = this.props, width = ref.width, height = ref.height, x = ref.x, options = ref.options, padding = ref.padding, position = ref.position;
    style = {
      width: width,
      height: height,
      position: 'absolute',
      left: padding
    };
    if (position === 'bottom') {
      style.bottom = 0;
    } else {
      style.top = 0;
    }
    return React.createElement("svg", {
      "className": 'axis x-axis',
      "style": style
    }, x.ticks((options != null ? options.tics : void 0) || 10).map(function(t, ti) {
      return React.createElement("text", {
        "x": x(t),
        "y": height - 6,
        "textAnchor": 'middle',
        "key": ti
      }, t.toFixed(0));
    }));
  }
});

exports.YAxis = React.createClass({displayName: "YAxis",
  render: function() {
    var height, options, padding, ref, width, y;
    ref = this.props, width = ref.width, height = ref.height, y = ref.y, options = ref.options, padding = ref.padding;
    return React.createElement("svg", {
      "className": 'axis y-axis',
      "style": {
        width: width,
        height: height,
        position: 'absolute',
        left: 0,
        top: padding
      }
    }, y.ticks((options != null ? options.ticks : void 0) || (height / 20)).map(function(t, ti) {
      return React.createElement("text", {
        "y": y(t),
        "x": width / 2,
        "textAnchor": 'middle',
        "key": ti
      }, t.toFixed(0));
    }));
  }
});
