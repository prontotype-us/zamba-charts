// Generated by CoffeeScript 1.8.0
var React;

React = require('react');

exports.XAxis = function(_arg) {
  var border, format, height, label, labels, position, style, ticks, width, x;
  width = _arg.width, height = _arg.height, x = _arg.x, position = _arg.position, format = _arg.format, ticks = _arg.ticks, labels = _arg.labels, label = _arg.label, border = _arg.border;
  style = {
    width: width,
    height: height,
    position: 'absolute',
    left: 0
  };
  if (position === 'bottom') {
    style.bottom = 0;
  } else {
    style.top = 0;
  }
  return React.createElement("svg", {
    "className": 'axis x-axis',
    "style": style
  }, (labels != null ? Object.keys(labels).map(function(label_x) {
    return React.createElement("text", {
      "x": x(label_x),
      "y": height,
      "textAnchor": 'middle',
      "key": label_x
    }, labels[label_x]);
  }) : x.ticks(ticks || 10).map((function(_this) {
    return function(t, ti) {
      var alignment_baseline, text_y, tick_label;
      tick_label = format != null ? format(t) : t.toFixed(0);
      text_y = position === 'bottom' ? height : 0;
      alignment_baseline = position === 'bottom' ? 'baseline' : 'hanging';
      return React.createElement("text", {
        "x": x(t),
        "y": text_y,
        "textAnchor": 'middle',
        "key": ti,
        "alignmentBaseline": alignment_baseline
      }, tick_label);
    };
  })(this))), (label ? React.createElement("text", {
    "className": 'label',
    "x": width,
    "y": height,
    "key": 'label',
    "style": {
      fontWeight: 'bold'
    }
  }, label) : void 0), (border ? React.createElement("rect", {
    "height": 1,
    "x": height,
    "width": width - height
  }) : void 0));
};

exports.YAxis = function(_arg) {
  var border, format, height, label, position, style, ticks, width, y;
  width = _arg.width, height = _arg.height, y = _arg.y, position = _arg.position, format = _arg.format, ticks = _arg.ticks, label = _arg.label, border = _arg.border;
  style = {
    width: width,
    height: height,
    position: 'absolute',
    top: 0
  };
  if (position === 'left') {
    style.left = 0;
  } else {
    style.right = 0;
  }
  return React.createElement("svg", {
    "className": 'axis y-axis',
    "style": style
  }, y.ticks(ticks || (height / 20)).map(function(t, ti) {
    var text_anchor, text_x, tick_label;
    tick_label = format != null ? format(t) : t.toFixed(0);
    text_x = position === 'left' ? 0 : width;
    text_anchor = position === 'left' ? 'start' : 'end';
    return React.createElement("text", {
      "y": y(t),
      "x": text_x,
      "textAnchor": text_anchor,
      "alignmentBaseline": 'middle',
      "key": ti
    }, tick_label);
  }), (label != null ? React.createElement("text", {
    "className": 'label',
    "y": 0,
    "textAnchor": 'start',
    "key": 'label',
    "style": {
      fontWeight: 'bold'
    }
  }, label) : void 0), (border ? React.createElement("rect", {
    "width": 1,
    "x": width,
    "y": 0,
    "height": height - width
  }) : void 0));
};
