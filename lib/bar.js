// Generated by CoffeeScript 1.10.0
var BarChart, React, d3;

React = require('react');

d3 = require('d3');

module.exports = BarChart = React.createClass({displayName: "BarChart",
  getDefaultProps: function() {
    return {
      color: '#000'
    };
  },
  shouldComponentUpdate: function(next_props, next_state) {
    if (next_props.data.length !== this.props.data.length) {
      return true;
    } else if ((next_props.width !== this.props.width) || (next_props.height !== this.props.height)) {
      return true;
    } else if ((next_props.y !== this.props.y) || (next_props.x !== this.props.x)) {
      return true;
    } else {
      return false;
    }
  },
  render: function() {
    var axis_size, bar_width, data, height, ref, width, x, x_extent, y;
    ref = this.props, width = ref.width, height = ref.height, data = ref.data, x = ref.x, y = ref.y, axis_size = ref.axis_size;
    x_extent = d3.extent(data, function(d) {
      return d.x;
    });
    bar_width = Math.floor(width / data.length - 1);
    x || (x = d3.scaleLinear().domain(x_extent).range([0, width]));
    y || (y = d3.scaleLinear().domain([
      0, d3.max(data, function(d) {
        return d.y;
      })
    ]).range([height, 0]));
    return React.createElement("svg", {
      "className": 'bar-chart',
      "style": {
        width: width,
        height: height,
        position: 'absolute',
        left: axis_size
      }
    }, data.map((function(_this) {
      return function(d, di) {
        return React.createElement("rect", {
          "onClick": typeof onClick !== "undefined" && onClick !== null ? onClick.bind(null, data[di]) : void 0,
          "key": di,
          "x": x(d.x) - bar_width / 2,
          "y": y(d.y),
          "width": bar_width,
          "height": height - y(d.y),
          "fill": _this.props.color
        });
      };
    })(this)));
  }
});
