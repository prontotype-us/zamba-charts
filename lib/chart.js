// Generated by CoffeeScript 1.10.0
var Chart, React, XAxis, YAxis, d3, padding;

React = require('react');

d3 = require('d3');

padding = 20;

XAxis = React.createClass({displayName: "XAxis",
  render: function() {
    var height, ref, width, x;
    ref = this.props, width = ref.width, height = ref.height, x = ref.x;
    return React.createElement("svg", {
      "className": 'axis x-axis',
      "style": {
        width: width,
        height: height,
        position: 'absolute',
        bottom: 0,
        right: padding
      }
    }, x.ticks(width / 40).map(function(t) {
      return React.createElement("text", {
        "x": x(t),
        "y": height - 6,
        "textAnchor": 'middle'
      }, t);
    }));
  }
});

YAxis = React.createClass({displayName: "YAxis",
  render: function() {
    var height, ref, width, y;
    ref = this.props, width = ref.width, height = ref.height, y = ref.y;
    return React.createElement("svg", {
      "className": 'axis y-axis',
      "style": {
        width: width,
        height: height,
        position: 'absolute',
        left: 0,
        top: padding
      }
    }, y.ticks(height / 20).map(function(t) {
      return React.createElement("text", {
        "y": y(t) + 6,
        "x": width / 2,
        "textAnchor": 'middle'
      }, t);
    }));
  }
});

module.exports = Chart = React.createClass({displayName: "Chart",
  render: function() {
    var adjust, children, data, height, ref, title, width, x, x_extent, y;
    ref = this.props, width = ref.width, height = ref.height, data = ref.data, title = ref.title, children = ref.children, adjust = ref.adjust;
    width -= padding * 2;
    height -= padding;
    x_extent = d3.extent(data, function(d) {
      return d.x;
    });
    if (adjust) {
      x_extent[0] -= 0.5;
      x_extent[1] += 0.5;
    }
    x = d3.scaleLinear().domain(x_extent).range([0, width]);
    y = d3.scaleLinear().domain([
      0, d3.max(data, function(d) {
        return d.y;
      })
    ]).range([height, 0]);
    return React.createElement("div", {
      "className": 'chart',
      "style": {
        position: 'relative',
        padding: padding,
        display: 'inline-block',
        verticalAlign: 'top',
        margin: 5
      }
    }, React.cloneElement(children, {
      width: width,
      height: height,
      data: data,
      x: x,
      y: y
    }), React.createElement(XAxis, {
      "x": x,
      "width": width,
      "height": padding
    }), React.createElement(YAxis, {
      "y": y,
      "width": padding,
      "height": height
    }));
  }
});
