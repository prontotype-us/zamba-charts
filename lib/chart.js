// Generated by CoffeeScript 1.10.0
var Chart, React, XAxis, YAxis, d3, ref;

React = require('react');

d3 = require('d3');

ref = require('./axes'), XAxis = ref.XAxis, YAxis = ref.YAxis;

module.exports = Chart = React.createClass({displayName: "Chart",
  getDefaultProps: function() {
    return {
      padding: 20
    };
  },
  render: function() {
    var adjust, children, data, height, padding, ref1, title, width, x, x_extent, y, y_extent;
    ref1 = this.props, width = ref1.width, height = ref1.height, data = ref1.data, title = ref1.title, children = ref1.children, adjust = ref1.adjust, padding = ref1.padding;
    width -= padding * 2;
    height -= padding;
    x_extent = d3.extent(data, function(d) {
      return d.x;
    });
    if (adjust) {
      x_extent[0] -= 0.5;
      x_extent[1] += 0.5;
    }
    y_extent = d3.extent(data, function(d) {
      return d.y;
    });
    if (false) {
      y_extent = [
        0, d3.max(data, function(d) {
          return d.y;
        })
      ];
    }
    x = d3.scaleLinear().range([0, width]).domain(x_extent);
    y = d3.scaleLinear().range([height, 0]).domain(y_extent);
    return React.createElement("div", {
      "className": 'chart',
      "style": {
        position: 'relative',
        padding: padding
      }
    }, React.cloneElement(children, {
      width: width,
      height: height,
      data: data,
      x: x,
      y: y,
      padding: padding
    }), React.createElement(XAxis, {
      "x": x,
      "width": width,
      "height": padding,
      "padding": padding
    }), React.createElement(YAxis, {
      "y": y,
      "width": padding,
      "height": height,
      "padding": padding
    }));
  }
});
